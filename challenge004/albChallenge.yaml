AWSTemplateFormatVersion: '2010-09-09'
Description: CloudForce 004

Resources:
  CloudForceVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: CloudForceVPC
  MyKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: my-key-pair


  CloudForcePrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudForceVPC
      CidrBlock: 172.16.1.0/20
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CloudForcePrivate1

  CloudForcePrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CloudForceVPC
      CidrBlock: 172.16.128.0/20
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: CloudForcePrivate2
          
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CloudForceIG

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CloudForceVPC
      InternetGatewayId: !Ref InternetGateway

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CloudForceVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  AssociatePublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref CloudForcePublic
      RouteTableId: !Ref RouteTablePublic

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: my-alb
      Scheme: internet-facing
      Type: application
      Subnets:
        - !Ref CloudForcePrivate1
        - !Ref CloudForcePrivate2
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Tags:
        - Key: Name
          Value: my-alb

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: my-target-group
      Protocol: HTTP
      Port: 80
      TargetType: ip
      VpcId: !Ref CloudForceVPC
      Tags:
        - Key: Name
          Value: my-target-group

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: my-alb-sg
      GroupDescription: Security group for my ALB
      VpcId: !Ref CloudForceVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: my-alb-sg

  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-02396cdd13e9a1257
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      KeyName: my-key-pair
      UserData: !Base64 | 
        #!/bin/bash
        yum update -y
        yum install -y httpd git
        systemctl start httpd
        systemctl enable httpd
        cd /var/www/html
        rm -rf *
        git clone https://github.com/lewisawe/cloudForceWebSawe.git .
        systemctl restart httpd
      Tags:
        - Key: Name
          Value: CloudForceEC2
      
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH and HTTP access via port 22 and
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
